from flask import render_template, url_for, flash, redirect, request
from helo import app, db, bcrypt
from helo.forms import RegistrationForm, LoginForm, Productform
from helo.model import User, Post
from flask_login import login_user, current_user, logout_user, login_required

posts =[
	{
		'author': 'Oladimeji Ibrahim',
		'title': 'Blog Post 1',
		'content': 'First Post content',
		'date_posted': 'April 20, 2020'
	},
	{
		'author': 'Ibrahim IDayo',
		'title': 'Blog Post 2',
		'content': 'Second Post content',
		'date_posted': 'April 22, 2020'
	},
	{
		'author': 'Ibrahim IDayo',
		'title': 'Blog Post 2',
		'content': 'Second Post content',
		'date_posted': 'April 22, 2020'
	},
	{
		'author': 'Ibrahim IDayo',
		'title': 'Blog Post 2',
		'content': 'Second Post content',
		'date_posted': 'April 22, 2020'
	},
	{
		'author': 'Ibrahim IDayo',
		'title': 'Blog Post 2',
		'content': 'Second Post content',
		'date_posted': 'April 22, 2020'
	},
	{
		'author': 'Ibrahim IDayo',
		'title': 'Blog Post 2',
		'content': 'Second Post content',
		'date_posted': 'April 22, 2020'
	},
	{
		'author': 'Ibrahim IDayo',
		'title': 'Blog Post 2',
		'content': 'Second Post content',
		'date_posted': 'April 22, 2020'
	},
	{
		'author': 'Ibrahim IDayo',
		'title': 'Blog Post 2',
		'content': 'Second Post content',
		'date_posted': 'April 22, 2020'
	}


]

@app.route('/')
def home ():
	posts = Products.query.all()
	return render_template ('home.html.j2',posts=posts)

@app.route('/about')
def about ():
	return render_template ('about.html.j2', title='about')

@app.route ('/register', methods=['GET','POST'])
def register():
	if current_user.is_authenticated:
		return redirect(url_for('home'))
	form = RegistrationForm()
	if form.validate_on_submit():
		hashed_password = bcrypt.generate_password_hash (form.password.data).decode('utf-8')
		user = User (fullname=form.fullname.data,email=form.email.data, username=form.username.data, password=hashed_password, mobile=form.mobile.data )
		db.session.add (user)
		db.session.commit()
		flash('Your accout has been created! You are now able to log in','success')
		return redirect(url_for('login'))

	return render_template ('register.html.j2', title='Register', form=form )

@app.route ('/login', methods=['GET','POST'])
def login():
	if current_user.is_authenticated:
		return redirect(url_for('home'))
	form = LoginForm()
	if form.validate_on_submit():
		user =User.query.filter_by(email=form.email.data).first()
		if user and bcrypt.check_password_hash(user.password, form.password.data):
			login_user(user, remember=form.remember.data)
			next_page = request.args.get('next')
			return redirect (next_page) if next_page else  redirect (url_for('home'))
		else:
			flash('Login Unsucessful, Please check email and password','danger')

	return render_template ('login.html.j2', title='Login', form=form )

@app.route ('/logout' )
def logout():
	logout_user()
	return redirect (url_for('home'))

@app.route ('/account' )
@login_required
def account():
	return render_template ('account.html.j2', title='Accout')

@app.route("/table", methods=['GET', 'POST'])
def show_table():
    if request:
        search_key = request.form.get("searchKey")
    else:
        search_key = ""
    products = Products.query.filter()
    return render_template('table.html', **{'get_products': get_products, 'search_key':search_key})

@app.route ('/add', methods=['GET','POST'])
@login_required
def new_product():
	form = Productform()
	if request.method == 'POST':
		if form.validate_on_submit():
			filename = images.save(request.files['picture'])
			url = images.url (filename)
			new_product = Products (id=form.id.data, pName=form.pName.data, description=form.description.data, price=form.price.data, available=form.available.data, category=form.category.data, pCode=form.pCode.data, item=form.item.data, picture=url, date_created= form.date_created.data, product_id=current_user.id)
			db.session.add(new_product)
			db.session.commit()
			flash("Congratulations, your item has been added")
			return redirect(url_for(url_for('home'),username=current_user.username), 'success')
		else:
			flash_errors(form)
			flash('ERROR! Recipe was not added.', 'error')
	return render_template ('product_add.html.j2', title='Admin', form=form)
	 
	  
